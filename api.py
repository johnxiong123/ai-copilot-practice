# -*- coding: utf-8 -*-
"""api.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BuAnHYtKnjkhMylqme2re4yeV-YUpkbA
"""

from flask import Flask, request, jsonify
import tensorflow as tf
import pandas as pd
from sklearn.preprocessing import StandardScaler

app = Flask(__name__)

# Load your trained model
model = tf.keras.models.load_model('/home/dev/ai-copilot-practice/my_trained_model.h5')

@app.route('/predict', methods=['POST'])
def predict():
    data = request.json  # Get data posted as a json
    if 'input' in data:
        input_data = data['input']
        prediction = model.predict([input_data])  # Adjust according to your model's predict method
        return jsonify({'prediction': prediction.tolist()})
    else:
        return jsonify({'error': 'No input data provided'}), 400

@app.route('/predict_from_csv', methods=['POST'])
def predict_from_csv():
    data = request.json  # Get data posted as a json
    if 'file_path' in data:
        file_path = data['file_path']

        # Read the CSV file
        df = pd.read_csv(file_path)

        # Preprocess the data as needed (example given, adjust as necessary)
        numeric_cols = df.select_dtypes(include=['int64', 'float64']).columns
        scaler = StandardScaler()
        df[numeric_cols] = scaler.fit_transform(df[numeric_cols])

        input_data = df.values  # Convert DataFrame to numpy array

        # Make prediction
        prediction = model.predict(input_data)  # Adjust according to your model's predict method
        return jsonify({'prediction': prediction.tolist()})
    else:
        return jsonify({'error': 'No file path provided'}), 400

if __name__ == '__main__':
    app.run(debug=True)